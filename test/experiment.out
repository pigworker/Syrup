Circuits `not`, `and`, `or`, `xor`, and `hadd` are defined.

Truth table for `hadd`:
  X Y |    
  ----|----
  0 0 | 0 0
  0 1 | 0 1
  1 0 | 0 1
  1 1 | 1 0

Circuit `fadd` is defined.

Truth table for `fadd`:
  X Y CI | CO Z
  -------|-----
  0 0 0  | 0  0
  0 0 1  | 0  1
  0 1 0  | 0  1
  0 1 1  | 1  0
  1 0 0  | 0  1
  1 0 1  | 1  0
  1 1 0  | 1  0
  1 1 1  | 1  1

Type `<Two>` is defined.

Circuit `adc2` is defined.

Truth table for `adc2`:
  [X1 X0] [Y1 Y0] CI | CO [Z1 Z0]
  -------------------|-----------
  [0  0 ] [0  0 ] 0  | 0  [0  0 ]
  [0  0 ] [0  0 ] 1  | 0  [0  1 ]
  [0  0 ] [0  1 ] 0  | 0  [0  1 ]
  [0  0 ] [0  1 ] 1  | 0  [1  0 ]
  [0  0 ] [1  0 ] 0  | 0  [1  0 ]
  [0  0 ] [1  0 ] 1  | 0  [1  1 ]
  [0  0 ] [1  1 ] 0  | 0  [1  1 ]
  [0  0 ] [1  1 ] 1  | 1  [0  0 ]
  [0  1 ] [0  0 ] 0  | 0  [0  1 ]
  [0  1 ] [0  0 ] 1  | 0  [1  0 ]
  [0  1 ] [0  1 ] 0  | 0  [1  0 ]
  [0  1 ] [0  1 ] 1  | 0  [1  1 ]
  [0  1 ] [1  0 ] 0  | 0  [1  1 ]
  [0  1 ] [1  0 ] 1  | 1  [0  0 ]
  [0  1 ] [1  1 ] 0  | 1  [0  0 ]
  [0  1 ] [1  1 ] 1  | 1  [0  1 ]
  [1  0 ] [0  0 ] 0  | 0  [1  0 ]
  [1  0 ] [0  0 ] 1  | 0  [1  1 ]
  [1  0 ] [0  1 ] 0  | 0  [1  1 ]
  [1  0 ] [0  1 ] 1  | 1  [0  0 ]
  [1  0 ] [1  0 ] 0  | 1  [0  0 ]
  [1  0 ] [1  0 ] 1  | 1  [0  1 ]
  [1  0 ] [1  1 ] 0  | 1  [0  1 ]
  [1  0 ] [1  1 ] 1  | 1  [1  0 ]
  [1  1 ] [0  0 ] 0  | 0  [1  1 ]
  [1  1 ] [0  0 ] 1  | 1  [0  0 ]
  [1  1 ] [0  1 ] 0  | 1  [0  0 ]
  [1  1 ] [0  1 ] 1  | 1  [0  1 ]
  [1  1 ] [1  0 ] 0  | 1  [0  1 ]
  [1  1 ] [1  0 ] 1  | 1  [1  0 ]
  [1  1 ] [1  1 ] 0  | 1  [1  0 ]
  [1  1 ] [1  1 ] 1  | 1  [1  1 ]

Simulation for `adc2`:
  0 {} [1, 0][0, 1]1 -> 1[0, 0]
  1 {} [1, 1][1, 0]0 -> 1[0, 1]
  2 {}

Circuits `xor1` and `xor2` are defined.

Bisimulation between `xor1`, `xor2`:
  `xor1` behaves like `xor2`
    {} ~ {}

Bisimulation between `xor`, `or`:
  `xor` has a behaviour that `or` does not match
  xor(11) = 0
   but or(11) = 1

Typing for `adc2`:
  adc2(<Two>, <Two>, <Bit>) -> <Bit>, <Two>

Printing `adc2`:
  adc2([<Bit>, <Bit>], [<Bit>, <Bit>], <Bit>) -> <Bit>, [<Bit>, <Bit>]
  adc2([X1, X0], [Y1, Y0], CI) = CO, [Z1, Z0] where
    C1, Z0 = fadd(X0, Y0, CI)
    CO, Z1 = fadd(X1, Y1, C1)
