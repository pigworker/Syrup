not is defined.

and is defined.

or is defined.

xor is defined.

hadd is defined.

Truth table for hadd:
X Y |    
----|----
0 0 | 0 0
0 1 | 0 1
1 0 | 0 1
1 1 | 1 0

fadd is defined.

Truth table for fadd:
X Y CI | CO Z
-------|-----
0 0 0  | 0  0
0 0 1  | 0  1
0 1 0  | 0  1
0 1 1  | 1  0
1 0 0  | 0  1
1 0 1  | 1  0
1 1 0  | 1  0
1 1 1  | 1  1

Type alias Two defined.

adc2 is defined.

Truth table for adc2:
[X1 X0] [Y1 Y0] CI | CO [Z1 Z0]
-------------------|-----------
[0  0 ] [0  0 ] 0  | 0  [0  0 ]
[0  0 ] [0  0 ] 1  | 0  [0  1 ]
[0  0 ] [0  1 ] 0  | 0  [0  1 ]
[0  0 ] [0  1 ] 1  | 0  [1  0 ]
[0  0 ] [1  0 ] 0  | 0  [1  0 ]
[0  0 ] [1  0 ] 1  | 0  [1  1 ]
[0  0 ] [1  1 ] 0  | 0  [1  1 ]
[0  0 ] [1  1 ] 1  | 1  [0  0 ]
[0  1 ] [0  0 ] 0  | 0  [0  1 ]
[0  1 ] [0  0 ] 1  | 0  [1  0 ]
[0  1 ] [0  1 ] 0  | 0  [1  0 ]
[0  1 ] [0  1 ] 1  | 0  [1  1 ]
[0  1 ] [1  0 ] 0  | 0  [1  1 ]
[0  1 ] [1  0 ] 1  | 1  [0  0 ]
[0  1 ] [1  1 ] 0  | 1  [0  0 ]
[0  1 ] [1  1 ] 1  | 1  [0  1 ]
[1  0 ] [0  0 ] 0  | 0  [1  0 ]
[1  0 ] [0  0 ] 1  | 0  [1  1 ]
[1  0 ] [0  1 ] 0  | 0  [1  1 ]
[1  0 ] [0  1 ] 1  | 1  [0  0 ]
[1  0 ] [1  0 ] 0  | 1  [0  0 ]
[1  0 ] [1  0 ] 1  | 1  [0  1 ]
[1  0 ] [1  1 ] 0  | 1  [0  1 ]
[1  0 ] [1  1 ] 1  | 1  [1  0 ]
[1  1 ] [0  0 ] 0  | 0  [1  1 ]
[1  1 ] [0  0 ] 1  | 1  [0  0 ]
[1  1 ] [0  1 ] 0  | 1  [0  0 ]
[1  1 ] [0  1 ] 1  | 1  [0  1 ]
[1  1 ] [1  0 ] 0  | 1  [0  1 ]
[1  1 ] [1  0 ] 1  | 1  [1  0 ]
[1  1 ] [1  1 ] 0  | 1  [1  0 ]
[1  1 ] [1  1 ] 1  | 1  [1  1 ]

Simulation for adc2:
0 {} [10][01]1 -> 1[00]
1 {} [11][10]0 -> 1[01]
2 {}

xor1 is defined.

xor2 is defined.

xor1 behaves like xor2
  {} ~ {}

xor has a behaviour that or does not match
  xor(11) = 0 but or(11) = 1

adc2([<Bit>, <Bit>], [<Bit>, <Bit>], <Bit>) -> <Bit>, [<Bit>, <Bit>]

adc2([<Bit>, <Bit>], [<Bit>, <Bit>], <Bit>) -> <Bit>, [<Bit>, <Bit>]
adc2([X1, X0], [Y1, Y0], CI) = CO, [Z1, Z0] where
  C1, Z0 = fadd(X0, Y0, CI)
  CO, Z1 = fadd(X1, Y1, C1)


