not(<Bit>) -> <Bit>
not(X) = nand(X,X)

and(<Bit>, <Bit>) -> <Bit>
and(X,Y) = not(nand(X,Y))

or(<Bit>, <Bit>) -> <Bit>
or(X,Y) = nand(not(X),not(Y))

xor(<Bit>, <Bit>) -> <Bit>
xor(X,Y) = or(and(X,not(Y)),and(not(X),Y))

cost not
cost [] and
cost or
cost [] xor
cost [and,or,not] xor