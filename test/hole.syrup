not(<Bit>) -> <Bit>
not(X) = nand(X,X)

and(<Bit>, <Bit>) -> <Bit>
and(X,Y) = !nand(X,Y)

or(<Bit>, <Bit>) -> <Bit>
or(X,Y) = nand(!X,!Y)

type <Bit2> = [<Bit>, <Bit>]

f(<Bit>) -> <Bit>, <Bit2>
f(X) = !R & S & ?A & (?B | ?C), ?E where

  [R,S] = ?D

problematic() -> <Bit>
problematic() = ?