<style>
  .syrup-code {
    display: block;
    font-family: monospace;
    font-size: 17px;
    white-space: pre;
    margin: 1em 0;
  }
  .syrup-happy:before {
    content: "\2705";
    padding: 0 6px 0 0;
  }
  .syrup-comment:before {
    content: "\2705";
    padding: 0 6px 0 0;
  }
  .syrup-warning:before {
    content: "\26A0\FE0F";
    padding: 0 6px 0 0;
  }
  .syrup-error:before {
    content: "\274C";
    padding: 0 6px 0 0;
  }
  .syrup-internal:before {
    content: "\1F480";
    padding: 0 6px 0 0;
  }

</style>
<div class="syrup-error">You haven&#39;t defined the circuit <code><span class="syrup-function">undefined</span></code> just now.</div><br>
<br>
<div class="syrup-warning">Circuit <code><span class="syrup-function">undefined</span></code> has been stubbed out.</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">not</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">not</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code">!<span class="syrup-type">&lt;Bit&gt;</span> -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
!X = Z <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">Z = <span class="syrup-function">nand</span>(X, X)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">and</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">and</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-type">&lt;Bit&gt;</span> &amp; <span class="syrup-type">&lt;Bit&gt;</span> -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
X &amp; Y = Z <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">A = <span class="syrup-function">nand</span>(X, Y)<br>
Z = !A</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">or</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">or</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-type">&lt;Bit&gt;</span> | <span class="syrup-type">&lt;Bit&gt;</span> -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
X | Y = Z <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">A, B = !X, !Y<br>
Z = <span class="syrup-function">nand</span>(A, B)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">nor</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">nor</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">nor</span>(<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
<span class="syrup-function">nor</span>(X, Y) = !(X | Y)</div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">xor</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">xor</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">xor</span>(<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
<span class="syrup-function">xor</span>(X, Y) = Z <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">A, B = X | Y, X &amp; Y<br>
C = !B<br>
Z = A &amp; C</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">hadd</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">hadd</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">hadd</span>(<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span><br>
<span class="syrup-function">hadd</span>(X1, Y1) = C2, S1 <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">C2 = X1 &amp; Y1<br>
S1 = <span class="syrup-function">xor</span>(X1, Y1)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">fadd</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">fadd</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">fadd</span>(<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span><br>
<span class="syrup-function">fadd</span>(X1, Y1, C1) = C2, Z1 <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">D2, D1 = <span class="syrup-function">hadd</span>(X1, Y1)<br>
E2, Z1 = <span class="syrup-function">hadd</span>(D1, C1)<br>
C2 = <span class="syrup-function">xor</span>(D2, E2)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-happy">Truth table for <code><span class="syrup-function">fadd</span></code>:<br>
<div style="padding-left: 2ch"><pre>X1 Y1 C1 | C2 Z1<br>
---------|------<br>
0  0  0  | 0  0 <br>
0  0  1  | 0  1 <br>
0  1  0  | 0  1 <br>
0  1  1  | 1  0 <br>
1  0  0  | 0  1 <br>
1  0  1  | 1  0 <br>
1  1  0  | 1  0 <br>
1  1  1  | 1  1 </pre></div></div><br>
<br>
<div class="syrup-comment">Type <code><span class="syrup-type">&lt;Bit2&gt;</span></code> is defined.</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">adc2</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">adc2</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">adc2</span>([<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>], [<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>], <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span>, [<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>]<br>
<span class="syrup-function">adc2</span>([X2, X1], [Y2, Y1], C1) = C4, [Z2, Z1] <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">C2, Z1 = <span class="syrup-function">fadd</span>(X1, Y1, C1)<br>
C4, Z2 = <span class="syrup-function">fadd</span>(X2, Y2, C2)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">one</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">one</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code">1 -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
1 = !0</div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">mux</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">mux</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">mux</span>(<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span><br>
<span class="syrup-function">mux</span>(C, X, Y) = C &amp; X | !C &amp; Y</div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div><br>
<br>
<div class="syrup-comment">Circuit <code><span class="syrup-function">adc2par</span></code> is defined.</div><br>
<br>
<div class="syrup-happy">Printing <code><span class="syrup-function">adc2par</span></code>:<br>
<div style="padding-left: 2ch"><div class="syrup-code"><span class="syrup-function">adc2par</span>([<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>], [<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>], <span class="syrup-type">&lt;Bit&gt;</span>) -&gt; <span class="syrup-type">&lt;Bit&gt;</span>, [<span class="syrup-type">&lt;Bit&gt;</span>, <span class="syrup-type">&lt;Bit&gt;</span>]<br>
<span class="syrup-function">adc2par</span>([X2, X1], [Y2, Y1], C1) = C4, [Z2, Z1] <span class="syrup-keyword">where</span><br>
<div style="padding-left: 2ch">C2, Z1 = <span class="syrup-function">fadd</span>(X1, Y1, C1)<br>
C40, Z20 = <span class="syrup-function">fadd</span>(X2, Y2, 0)<br>
C41, Z21 = <span class="syrup-function">fadd</span>(X2, Y2, 1)<br>
C4 = <span class="syrup-function">mux</span>(C2, C41, C40)<br>
Z2 = <span class="syrup-function">mux</span>(C2, Z21, Z20)</div></div></div></div><br>
<br>
<div class="syrup-happy">not implemented yet</div>