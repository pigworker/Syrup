not(<Bit>) -> <Bit>
not(X) = nand(X,X)

and(<Bit>, <Bit>) -> <Bit>
and(X,Y) = not(nand(X,Y))

or(<Bit>, <Bit>) -> <Bit>
or(X,Y) = nand(Z, S) where
  Z = not(X)
  S = not(Y)

one() -> <Bit>
one() = !0

























----------------------------------------------

complex(<Bit>, <Bit>, <Bit>) -> <Bit>
complex(X,Y,Z) = !(X|Y&Z) & !(!Z&Y&X)

dnf complex